1. Non-terminals: Enclosed in < > eg:<program>
2. Terminals: strings in quotes eg:"int"
3. Peoductions: Non-terminal followed by "->" and a sequence of terminals and non-terminals eg:<program> -> "int" <decllist> ";" <cmpdstmt> "."
4. Start symbol: <program>

5. Non-terminal symbols: <program>, <decllist>, <declaration>, <type>, <compoundstmt>, <stmtlist>, <stmt>, <simplstmt>, <assignstmt>, <iostmt>, 
<expression>, <term>, <factor>, <condition>, <relation>, <structstmt>, <ifstmt>, <whilestmt>, <structdecl>, <identifier>, <letter_digit_sequence>, <letter>, <digit>, <intconst>, <nr>, <string>, <char>, <boolconst>
6. Terminals: "VARIABILE", "BOOL", "ÎNTREG", "ÎNCEPE", "TERMINĂ", "CITESTE", "SCRIE", "+", "*", "MOD", "DACĂ", "ATUNCI", "ALTFEL", "CÂT", "EXECUTĂ", 
"STRUCTURĂ", "{", "}", "(", ")", ":=", ";", ".", "<", "<=", "=", "<>", ">=", ">", "ȘI", "ADEVARAT", "FALS", "a", "b", ..., "z", "î", "ș", "ț", "â", "0", "1", ..., "9"

7. PRODUCTIONS:
<program> -> "VARIABILE" <decllist> ";" <cmpdstmt> "."

<decllist> -> <declaration> | <declaration> <decllist>
<declaration> -> <identifier> ":" <type>

<type> -> "BOOL" | "ÎNTREG"

<compoundstmt> -> "ÎNCEPE" <stmtlist> "TERMINĂ"
<stmtlist> -> <stmt> | <stmt> ";" <stmtlist>
<stmt> -> <simplstmt> | <structstmt>
<simplstmt> -> <assignstmt>  | <iostmt>
<assignstmt> -> <identifier> ":=" <expression>
<iostmt> -> "CITESTE" "(" <identifier> ")" | "SCRIE" "(" <expression> ")"

<expression> -> <expression> "+" <term> | <term>

<term> -> <term> "*" <factor> | <factor>

<factor> -> "(" <expression> ")" | <identifier> | <intconst> | <boolconst> | <factor> "MOD" <factor>

<condition> -> <expression> <relation> <expression> | <expression> "ȘI" <expression>
<relation> -> "<" | "<=" | "=" | "<>" | ">=" | ">"

<structstmt> -> <ifstmt> | <whilestmt> | <cmpdstmt>
<ifstmt> -> "DACĂ" <condition> "ATUNCI" <stmt> | "DACĂ" <condition> "ATUNCI" <stmt> "ALTFEL" <stmt>
<whilestmt> -> "CÂT" <condition> "EXECUTĂ" <stmt>

<structdecl> -> "STRUCTURĂ" <identifier> "{" <fieldlist> "}"

<identifier> -> <letter> | <letter> <letter_digit_sequence>

<letter_digit_sequence> -> <letter> | <digit> | <letter_digit_sequence> <letter> | <letter_digit_sequence> <digit>
<letter> -> "a" | "b" | ... | "z"  | "î" | "ș" | "ț" | "â"
<digit> -> "0" | "1"  | ... | "9"

<intconst> -> "+" <nr> | "-" <nr> | <nr>
<nr> -> <digit> | <digit> <nr>

<string> -> <char> | <char> <string>
<char> -> <letter> | <digit>

<boolconst> -> "ADEVARAT" | "FALS"
