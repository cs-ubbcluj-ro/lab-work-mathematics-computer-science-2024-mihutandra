<program> ::= "VARIABILE" <decllist> ";" <cmpdstmt> "."

<decllist> ::= <declaration> | <declaration> <decllist>

<declaration> ::= <identifier> ":" <type>

<type> ::= "BOOL" | "ÎNTREG"

<cmpdstmt> ::= "ÎNCEPE" <stmtlist> "TERMINĂ"

<stmtlist> ::= <stmt> | <stmt> ";" <stmtlist>

<stmt> ::= <simplstmt> | <structstmt>

<simplstmt> ::= <assignstmt>  | <iostmt>

<assignstmt> ::= <identifier> ":=" <expression>

<iostmt> ::= "CITESTE" "(" <identifier> ")" | "SCRIE" "(" <expression> ")"

<expression> ::= <expression> "+" <term> | <term>

<term> ::= <term> "*" <factor> | <factor>

<factor> ::= "(" <expression> ")" | <identifier> | <intconst> | <boolconst> | <factor> "MOD" <factor>

<condition> ::= <expression> <relation> <expression> | <expression> "ȘI" <expression>

<relation> ::= "<" | "<=" | "=" | "<>" | ">=" | ">"

<structstmt> ::= <ifstmt> | <whilestmt> | <cmpdstmt>

<ifstmt> ::= "DACĂ" <condition> "ATUNCI" <stmt> | "DACĂ" <condition> "ATUNCI" <stmt> "ALTFEL" <stmt>

<whilestmt> ::= "CÂT" <condition> "EXECUTĂ" <stmt>

<identifier> ::= <letter> | <letter> <letter_digit_sequence>

<letter_digit_sequence> ::= <letter> | <digit> | <letter_digit_sequence> <letter> | <letter_digit_sequence> <digit>

<letter> ::= "a" | "b" | ... | "z"  | "î" | "ș" | "ț" | "â"

<digit> ::= "0" | "1"  | ... | "9"

<intconst> ::= "+" <no> | "-" <no> | <no>

<no> ::= <digit> | <digit> <no>

<boolconst> ::= "ADEVARAT" | "FALS"
